BUCKET_NAME =
REGION =
JOB =

RUNTIME_VERSION = 1.0
BUCKET = gs://$(BUCKET_NAME)
DATA ?=

TASK_VERSION = $(shell date -Ru "+%Y%m%d_%H%M%S")
MODEL_DIR = output_$(TASK_VERSION)

VGG16_NPY ?= vgg16.npy
JOB_NAME = $(JOB)_$(TASK_VERSION)
OUTPUT_PATH =
STAGING_BUCKET = $(BUCKET)
MAX_STEPS ?= 100
SUMMARY_STEP ?= 10

SCALE_TIER ?= BASIC
# BASIC or BASIC_GPU

test:
	@echo RUNTIME_VERSION = $(RUNTIME_VERSION)
	@echo BUCKET_NAME = $(BUCKET_NAME)
	@echo BUCKET = $(BUCKET)
	@echo REGION = $(REGION)
	@echo REGION = $(JOB)
	@echo MODEL_DIR = $(MODEL_DIR)
	@echo
	@echo DATA = $(DATA)
	@echo
	@echo TASK_VERSION = $(TASK_VERSION)
	@echo
	@echo VGG16_NPY = $(VGG16_NPY)
	@echo JOB_NAME = $(JOB_NAME)
	@echo OUTPUT_PATH = $(OUTPUT_PATH)
	@echo MAX_STEPS = $(MAX_STEPS)
	@echo SUMMARY_STEP = $(SUMMARY_STEP)
	@echo
	@echo SCALE_TIER = $(SCALE_TIER)

local:
	@mkdir $(MODEL_DIR)
	python -m trainer.task \
	--job-dir $(MODEL_DIR) \
	--max-steps $(MAX_STEPS) \
	--summary-step $(SUMMARY_STEP) \
	--vgg16-npy $(VGG16_NPY) \
	--content-image $(CONTENT_IMAGE) \
	--style-image $(STYLE_IMAGE)

ml-local:
	@mkdir $(MODEL_DIR)
	gcloud ml-engine local train \
	--module-name trainer.task \
	--package-path trainer/ \
	-- \
	--job-dir $(MODEL_DIR) \
	--max-steps $(MAX_STEPS) \
	--summary-step $(SUMMARY_STEP) \
	--vgg16-npy $(VGG16_NPY) \
	--content-image $(CONTENT_IMAGE) \
	--style-image $(STYLE_IMAGE)

ml-cloud:
	gcloud ml-engine jobs submit training $(JOB_NAME) \
	--async \
	--job-dir $(OUTPUT_PATH) \
	--runtime-version $(RUNTIME_VERSION) \
	--module-name trainer.task \
	--package-path trainer/ \
	--region $(REGION) \
	--scale-tier $(SCALE_TIER) \
	--staging-bucket $(BUCKET) \
	-- \
	--content-image $(DATA)/$(CONTENT_IMAGE) \
	--style-image $(DATA)/$(STYLE_IMAGE) \
	--vgg16-npy $(DATA)/$(VGG16_NPY)
